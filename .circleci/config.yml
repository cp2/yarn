version: 2

defaults: &defaults
  working_directory: ~/project/yarn
  docker:
    - image: yarnpkg/dev:latest

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          key: yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - .cache/yarn
      - persist_to_workspace:
          root: ~/project
          paths:
            - yarn
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Tests
          command: |
            node -v
            if [ "$CIRCLE_BRANCH" == 'master' ]; then
              ./scripts/set-dev-version.js
            fi;
            yarn lint
            # Limit maxWorkers to 3 to avoid OOM on CircleCI
            yarn test-ci -- -- --maxWorkers 3
            yarn check-lockfile
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Build distribution
          command: |
            node -v
            if [ "$CIRCLE_BRANCH" == 'master' ]; then
              ./scripts/set-dev-version.js
            fi;
            yarn build-dist
            node ./scripts/build-webpack.js
            ./scripts/build-deb.sh
      - store_artifacts:
          path: artifacts/
          destination: yarnpkg
  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy
          command: |
            # Only NPM is handled here - All other release files are handled in a webhook.
            if [ "${CIRCLE_PROJECT_USERNAME}" == "serima" ]; then # serima!
              echo 'match serima'
              if git describe --all --exact-match `git rev-parse HEAD` | grep "^v[0-9]\+\.[0-9]\+\.[0-9]\+$"; then
                echo 'tag ok'
                echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
                ./scripts/update-npm.sh
              fi
            fi

workflows:
  version: 2
  install-test-build-and-deploy:
    jobs:
      - install
      - test:
          requires:
            - install
      - build:
          requires:
            - install
      - deploy:
          requires:
            - test
            - build
